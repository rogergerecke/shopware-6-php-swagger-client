<?php
/**
 * Order
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.4.8.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Order Class Doc Comment
 *
 * @category Class
 * @description Added since version: 6.0.0.0
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Order implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'version_id' => 'string',
        'auto_increment' => 'int',
        'order_number' => 'string',
        'billing_address_id' => 'string',
        'billing_address_version_id' => 'string',
        'currency_id' => 'string',
        'language_id' => 'string',
        'sales_channel_id' => 'string',
        'order_date_time' => '\DateTime',
        'order_date' => 'string',
        'price' => '\OpenAPI\Client\Model\OrderPrice',
        'amount_total' => 'float',
        'amount_net' => 'float',
        'position_price' => 'float',
        'tax_status' => 'string',
        'shipping_costs' => '\OpenAPI\Client\Model\OrderShippingCosts',
        'shipping_total' => 'float',
        'currency_factor' => 'float',
        'deep_link_code' => 'string',
        'affiliate_code' => 'string',
        'campaign_code' => 'string',
        'customer_comment' => 'string',
        'state_id' => 'string',
        'rule_ids' => 'string[]',
        'custom_fields' => 'object',
        'created_by_id' => 'string',
        'updated_by_id' => 'string',
        'item_rounding' => '\OpenAPI\Client\Model\CurrencyItemRounding',
        'total_rounding' => '\OpenAPI\Client\Model\CurrencyItemRounding',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime',
        'state_machine_state' => '\OpenAPI\Client\Model\StateMachineState',
        'order_customer' => '\OpenAPI\Client\Model\OrderCustomer',
        'currency' => '\OpenAPI\Client\Model\Currency',
        'language' => '\OpenAPI\Client\Model\Language',
        'sales_channel' => '\OpenAPI\Client\Model\SalesChannel',
        'addresses' => '\OpenAPI\Client\Model\OrderAddress',
        'billing_address' => '\OpenAPI\Client\Model\OrderAddress',
        'deliveries' => '\OpenAPI\Client\Model\OrderDelivery',
        'line_items' => '\OpenAPI\Client\Model\OrderLineItem',
        'transactions' => '\OpenAPI\Client\Model\OrderTransaction',
        'documents' => '\OpenAPI\Client\Model\Document',
        'tags' => '\OpenAPI\Client\Model\Tag',
        'created_by' => '\OpenAPI\Client\Model\User',
        'updated_by' => '\OpenAPI\Client\Model\User'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'version_id' => null,
        'auto_increment' => 'int64',
        'order_number' => null,
        'billing_address_id' => null,
        'billing_address_version_id' => null,
        'currency_id' => null,
        'language_id' => null,
        'sales_channel_id' => null,
        'order_date_time' => 'date-time',
        'order_date' => null,
        'price' => null,
        'amount_total' => 'float',
        'amount_net' => 'float',
        'position_price' => 'float',
        'tax_status' => null,
        'shipping_costs' => null,
        'shipping_total' => 'float',
        'currency_factor' => 'float',
        'deep_link_code' => null,
        'affiliate_code' => null,
        'campaign_code' => null,
        'customer_comment' => null,
        'state_id' => null,
        'rule_ids' => null,
        'custom_fields' => null,
        'created_by_id' => null,
        'updated_by_id' => null,
        'item_rounding' => null,
        'total_rounding' => null,
        'created_at' => 'date-time',
        'updated_at' => 'date-time',
        'state_machine_state' => null,
        'order_customer' => null,
        'currency' => null,
        'language' => null,
        'sales_channel' => null,
        'addresses' => null,
        'billing_address' => null,
        'deliveries' => null,
        'line_items' => null,
        'transactions' => null,
        'documents' => null,
        'tags' => null,
        'created_by' => null,
        'updated_by' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'version_id' => 'versionId',
        'auto_increment' => 'autoIncrement',
        'order_number' => 'orderNumber',
        'billing_address_id' => 'billingAddressId',
        'billing_address_version_id' => 'billingAddressVersionId',
        'currency_id' => 'currencyId',
        'language_id' => 'languageId',
        'sales_channel_id' => 'salesChannelId',
        'order_date_time' => 'orderDateTime',
        'order_date' => 'orderDate',
        'price' => 'price',
        'amount_total' => 'amountTotal',
        'amount_net' => 'amountNet',
        'position_price' => 'positionPrice',
        'tax_status' => 'taxStatus',
        'shipping_costs' => 'shippingCosts',
        'shipping_total' => 'shippingTotal',
        'currency_factor' => 'currencyFactor',
        'deep_link_code' => 'deepLinkCode',
        'affiliate_code' => 'affiliateCode',
        'campaign_code' => 'campaignCode',
        'customer_comment' => 'customerComment',
        'state_id' => 'stateId',
        'rule_ids' => 'ruleIds',
        'custom_fields' => 'customFields',
        'created_by_id' => 'createdById',
        'updated_by_id' => 'updatedById',
        'item_rounding' => 'itemRounding',
        'total_rounding' => 'totalRounding',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'state_machine_state' => 'stateMachineState',
        'order_customer' => 'orderCustomer',
        'currency' => 'currency',
        'language' => 'language',
        'sales_channel' => 'salesChannel',
        'addresses' => 'addresses',
        'billing_address' => 'billingAddress',
        'deliveries' => 'deliveries',
        'line_items' => 'lineItems',
        'transactions' => 'transactions',
        'documents' => 'documents',
        'tags' => 'tags',
        'created_by' => 'createdBy',
        'updated_by' => 'updatedBy'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'version_id' => 'setVersionId',
        'auto_increment' => 'setAutoIncrement',
        'order_number' => 'setOrderNumber',
        'billing_address_id' => 'setBillingAddressId',
        'billing_address_version_id' => 'setBillingAddressVersionId',
        'currency_id' => 'setCurrencyId',
        'language_id' => 'setLanguageId',
        'sales_channel_id' => 'setSalesChannelId',
        'order_date_time' => 'setOrderDateTime',
        'order_date' => 'setOrderDate',
        'price' => 'setPrice',
        'amount_total' => 'setAmountTotal',
        'amount_net' => 'setAmountNet',
        'position_price' => 'setPositionPrice',
        'tax_status' => 'setTaxStatus',
        'shipping_costs' => 'setShippingCosts',
        'shipping_total' => 'setShippingTotal',
        'currency_factor' => 'setCurrencyFactor',
        'deep_link_code' => 'setDeepLinkCode',
        'affiliate_code' => 'setAffiliateCode',
        'campaign_code' => 'setCampaignCode',
        'customer_comment' => 'setCustomerComment',
        'state_id' => 'setStateId',
        'rule_ids' => 'setRuleIds',
        'custom_fields' => 'setCustomFields',
        'created_by_id' => 'setCreatedById',
        'updated_by_id' => 'setUpdatedById',
        'item_rounding' => 'setItemRounding',
        'total_rounding' => 'setTotalRounding',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'state_machine_state' => 'setStateMachineState',
        'order_customer' => 'setOrderCustomer',
        'currency' => 'setCurrency',
        'language' => 'setLanguage',
        'sales_channel' => 'setSalesChannel',
        'addresses' => 'setAddresses',
        'billing_address' => 'setBillingAddress',
        'deliveries' => 'setDeliveries',
        'line_items' => 'setLineItems',
        'transactions' => 'setTransactions',
        'documents' => 'setDocuments',
        'tags' => 'setTags',
        'created_by' => 'setCreatedBy',
        'updated_by' => 'setUpdatedBy'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'version_id' => 'getVersionId',
        'auto_increment' => 'getAutoIncrement',
        'order_number' => 'getOrderNumber',
        'billing_address_id' => 'getBillingAddressId',
        'billing_address_version_id' => 'getBillingAddressVersionId',
        'currency_id' => 'getCurrencyId',
        'language_id' => 'getLanguageId',
        'sales_channel_id' => 'getSalesChannelId',
        'order_date_time' => 'getOrderDateTime',
        'order_date' => 'getOrderDate',
        'price' => 'getPrice',
        'amount_total' => 'getAmountTotal',
        'amount_net' => 'getAmountNet',
        'position_price' => 'getPositionPrice',
        'tax_status' => 'getTaxStatus',
        'shipping_costs' => 'getShippingCosts',
        'shipping_total' => 'getShippingTotal',
        'currency_factor' => 'getCurrencyFactor',
        'deep_link_code' => 'getDeepLinkCode',
        'affiliate_code' => 'getAffiliateCode',
        'campaign_code' => 'getCampaignCode',
        'customer_comment' => 'getCustomerComment',
        'state_id' => 'getStateId',
        'rule_ids' => 'getRuleIds',
        'custom_fields' => 'getCustomFields',
        'created_by_id' => 'getCreatedById',
        'updated_by_id' => 'getUpdatedById',
        'item_rounding' => 'getItemRounding',
        'total_rounding' => 'getTotalRounding',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'state_machine_state' => 'getStateMachineState',
        'order_customer' => 'getOrderCustomer',
        'currency' => 'getCurrency',
        'language' => 'getLanguage',
        'sales_channel' => 'getSalesChannel',
        'addresses' => 'getAddresses',
        'billing_address' => 'getBillingAddress',
        'deliveries' => 'getDeliveries',
        'line_items' => 'getLineItems',
        'transactions' => 'getTransactions',
        'documents' => 'getDocuments',
        'tags' => 'getTags',
        'created_by' => 'getCreatedBy',
        'updated_by' => 'getUpdatedBy'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['version_id'] = $data['version_id'] ?? null;
        $this->container['auto_increment'] = $data['auto_increment'] ?? null;
        $this->container['order_number'] = $data['order_number'] ?? null;
        $this->container['billing_address_id'] = $data['billing_address_id'] ?? null;
        $this->container['billing_address_version_id'] = $data['billing_address_version_id'] ?? null;
        $this->container['currency_id'] = $data['currency_id'] ?? null;
        $this->container['language_id'] = $data['language_id'] ?? null;
        $this->container['sales_channel_id'] = $data['sales_channel_id'] ?? null;
        $this->container['order_date_time'] = $data['order_date_time'] ?? null;
        $this->container['order_date'] = $data['order_date'] ?? null;
        $this->container['price'] = $data['price'] ?? null;
        $this->container['amount_total'] = $data['amount_total'] ?? null;
        $this->container['amount_net'] = $data['amount_net'] ?? null;
        $this->container['position_price'] = $data['position_price'] ?? null;
        $this->container['tax_status'] = $data['tax_status'] ?? null;
        $this->container['shipping_costs'] = $data['shipping_costs'] ?? null;
        $this->container['shipping_total'] = $data['shipping_total'] ?? null;
        $this->container['currency_factor'] = $data['currency_factor'] ?? null;
        $this->container['deep_link_code'] = $data['deep_link_code'] ?? null;
        $this->container['affiliate_code'] = $data['affiliate_code'] ?? null;
        $this->container['campaign_code'] = $data['campaign_code'] ?? null;
        $this->container['customer_comment'] = $data['customer_comment'] ?? null;
        $this->container['state_id'] = $data['state_id'] ?? null;
        $this->container['rule_ids'] = $data['rule_ids'] ?? null;
        $this->container['custom_fields'] = $data['custom_fields'] ?? null;
        $this->container['created_by_id'] = $data['created_by_id'] ?? null;
        $this->container['updated_by_id'] = $data['updated_by_id'] ?? null;
        $this->container['item_rounding'] = $data['item_rounding'] ?? null;
        $this->container['total_rounding'] = $data['total_rounding'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['state_machine_state'] = $data['state_machine_state'] ?? null;
        $this->container['order_customer'] = $data['order_customer'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['language'] = $data['language'] ?? null;
        $this->container['sales_channel'] = $data['sales_channel'] ?? null;
        $this->container['addresses'] = $data['addresses'] ?? null;
        $this->container['billing_address'] = $data['billing_address'] ?? null;
        $this->container['deliveries'] = $data['deliveries'] ?? null;
        $this->container['line_items'] = $data['line_items'] ?? null;
        $this->container['transactions'] = $data['transactions'] ?? null;
        $this->container['documents'] = $data['documents'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['created_by'] = $data['created_by'] ?? null;
        $this->container['updated_by'] = $data['updated_by'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['id'])) {
            $invalidProperties[] = "invalid value for 'id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['version_id'])) {
            $invalidProperties[] = "invalid value for 'version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['billing_address_id'] === null) {
            $invalidProperties[] = "'billing_address_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['billing_address_id'])) {
            $invalidProperties[] = "invalid value for 'billing_address_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['billing_address_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['billing_address_version_id'])) {
            $invalidProperties[] = "invalid value for 'billing_address_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['currency_id'] === null) {
            $invalidProperties[] = "'currency_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['currency_id'])) {
            $invalidProperties[] = "invalid value for 'currency_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['language_id'] === null) {
            $invalidProperties[] = "'language_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['language_id'])) {
            $invalidProperties[] = "invalid value for 'language_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['sales_channel_id'] === null) {
            $invalidProperties[] = "'sales_channel_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['sales_channel_id'])) {
            $invalidProperties[] = "invalid value for 'sales_channel_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['order_date_time'] === null) {
            $invalidProperties[] = "'order_date_time' can't be null";
        }
        if ($this->container['currency_factor'] === null) {
            $invalidProperties[] = "'currency_factor' can't be null";
        }
        if ($this->container['state_id'] === null) {
            $invalidProperties[] = "'state_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['state_id'])) {
            $invalidProperties[] = "invalid value for 'state_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['created_by_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['created_by_id'])) {
            $invalidProperties[] = "invalid value for 'created_by_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['updated_by_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['updated_by_id'])) {
            $invalidProperties[] = "invalid value for 'updated_by_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['created_at'] === null) {
            $invalidProperties[] = "'created_at' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {

        if (!is_null($id) && (!preg_match("/^[0-9a-f]{32}$/", $id))) {
            throw new \InvalidArgumentException("invalid value for $id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets version_id
     *
     * @return string|null
     */
    public function getVersionId()
    {
        return $this->container['version_id'];
    }

    /**
     * Sets version_id
     *
     * @param string|null $version_id version_id
     *
     * @return self
     */
    public function setVersionId($version_id)
    {

        if (!is_null($version_id) && (!preg_match("/^[0-9a-f]{32}$/", $version_id))) {
            throw new \InvalidArgumentException("invalid value for $version_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['version_id'] = $version_id;

        return $this;
    }

    /**
     * Gets auto_increment
     *
     * @return int|null
     */
    public function getAutoIncrement()
    {
        return $this->container['auto_increment'];
    }

    /**
     * Sets auto_increment
     *
     * @param int|null $auto_increment auto_increment
     *
     * @return self
     */
    public function setAutoIncrement($auto_increment)
    {
        $this->container['auto_increment'] = $auto_increment;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return string|null
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param string|null $order_number order_number
     *
     * @return self
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets billing_address_id
     *
     * @return string
     */
    public function getBillingAddressId()
    {
        return $this->container['billing_address_id'];
    }

    /**
     * Sets billing_address_id
     *
     * @param string $billing_address_id billing_address_id
     *
     * @return self
     */
    public function setBillingAddressId($billing_address_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $billing_address_id))) {
            throw new \InvalidArgumentException("invalid value for $billing_address_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['billing_address_id'] = $billing_address_id;

        return $this;
    }

    /**
     * Gets billing_address_version_id
     *
     * @return string|null
     */
    public function getBillingAddressVersionId()
    {
        return $this->container['billing_address_version_id'];
    }

    /**
     * Sets billing_address_version_id
     *
     * @param string|null $billing_address_version_id billing_address_version_id
     *
     * @return self
     */
    public function setBillingAddressVersionId($billing_address_version_id)
    {

        if (!is_null($billing_address_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $billing_address_version_id))) {
            throw new \InvalidArgumentException("invalid value for $billing_address_version_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['billing_address_version_id'] = $billing_address_version_id;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return string
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param string $currency_id currency_id
     *
     * @return self
     */
    public function setCurrencyId($currency_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $currency_id))) {
            throw new \InvalidArgumentException("invalid value for $currency_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets language_id
     *
     * @return string
     */
    public function getLanguageId()
    {
        return $this->container['language_id'];
    }

    /**
     * Sets language_id
     *
     * @param string $language_id language_id
     *
     * @return self
     */
    public function setLanguageId($language_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $language_id))) {
            throw new \InvalidArgumentException("invalid value for $language_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['language_id'] = $language_id;

        return $this;
    }

    /**
     * Gets sales_channel_id
     *
     * @return string
     */
    public function getSalesChannelId()
    {
        return $this->container['sales_channel_id'];
    }

    /**
     * Sets sales_channel_id
     *
     * @param string $sales_channel_id sales_channel_id
     *
     * @return self
     */
    public function setSalesChannelId($sales_channel_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $sales_channel_id))) {
            throw new \InvalidArgumentException("invalid value for $sales_channel_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['sales_channel_id'] = $sales_channel_id;

        return $this;
    }

    /**
     * Gets order_date_time
     *
     * @return \DateTime
     */
    public function getOrderDateTime()
    {
        return $this->container['order_date_time'];
    }

    /**
     * Sets order_date_time
     *
     * @param \DateTime $order_date_time order_date_time
     *
     * @return self
     */
    public function setOrderDateTime($order_date_time)
    {
        $this->container['order_date_time'] = $order_date_time;

        return $this;
    }

    /**
     * Gets order_date
     *
     * @return string|null
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     *
     * @param string|null $order_date order_date
     *
     * @return self
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets price
     *
     * @return \OpenAPI\Client\Model\OrderPrice|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param \OpenAPI\Client\Model\OrderPrice|null $price price
     *
     * @return self
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets amount_total
     *
     * @return float|null
     */
    public function getAmountTotal()
    {
        return $this->container['amount_total'];
    }

    /**
     * Sets amount_total
     *
     * @param float|null $amount_total amount_total
     *
     * @return self
     */
    public function setAmountTotal($amount_total)
    {
        $this->container['amount_total'] = $amount_total;

        return $this;
    }

    /**
     * Gets amount_net
     *
     * @return float|null
     */
    public function getAmountNet()
    {
        return $this->container['amount_net'];
    }

    /**
     * Sets amount_net
     *
     * @param float|null $amount_net amount_net
     *
     * @return self
     */
    public function setAmountNet($amount_net)
    {
        $this->container['amount_net'] = $amount_net;

        return $this;
    }

    /**
     * Gets position_price
     *
     * @return float|null
     */
    public function getPositionPrice()
    {
        return $this->container['position_price'];
    }

    /**
     * Sets position_price
     *
     * @param float|null $position_price position_price
     *
     * @return self
     */
    public function setPositionPrice($position_price)
    {
        $this->container['position_price'] = $position_price;

        return $this;
    }

    /**
     * Gets tax_status
     *
     * @return string|null
     */
    public function getTaxStatus()
    {
        return $this->container['tax_status'];
    }

    /**
     * Sets tax_status
     *
     * @param string|null $tax_status tax_status
     *
     * @return self
     */
    public function setTaxStatus($tax_status)
    {
        $this->container['tax_status'] = $tax_status;

        return $this;
    }

    /**
     * Gets shipping_costs
     *
     * @return \OpenAPI\Client\Model\OrderShippingCosts|null
     */
    public function getShippingCosts()
    {
        return $this->container['shipping_costs'];
    }

    /**
     * Sets shipping_costs
     *
     * @param \OpenAPI\Client\Model\OrderShippingCosts|null $shipping_costs shipping_costs
     *
     * @return self
     */
    public function setShippingCosts($shipping_costs)
    {
        $this->container['shipping_costs'] = $shipping_costs;

        return $this;
    }

    /**
     * Gets shipping_total
     *
     * @return float|null
     */
    public function getShippingTotal()
    {
        return $this->container['shipping_total'];
    }

    /**
     * Sets shipping_total
     *
     * @param float|null $shipping_total shipping_total
     *
     * @return self
     */
    public function setShippingTotal($shipping_total)
    {
        $this->container['shipping_total'] = $shipping_total;

        return $this;
    }

    /**
     * Gets currency_factor
     *
     * @return float
     */
    public function getCurrencyFactor()
    {
        return $this->container['currency_factor'];
    }

    /**
     * Sets currency_factor
     *
     * @param float $currency_factor currency_factor
     *
     * @return self
     */
    public function setCurrencyFactor($currency_factor)
    {
        $this->container['currency_factor'] = $currency_factor;

        return $this;
    }

    /**
     * Gets deep_link_code
     *
     * @return string|null
     */
    public function getDeepLinkCode()
    {
        return $this->container['deep_link_code'];
    }

    /**
     * Sets deep_link_code
     *
     * @param string|null $deep_link_code deep_link_code
     *
     * @return self
     */
    public function setDeepLinkCode($deep_link_code)
    {
        $this->container['deep_link_code'] = $deep_link_code;

        return $this;
    }

    /**
     * Gets affiliate_code
     *
     * @return string|null
     */
    public function getAffiliateCode()
    {
        return $this->container['affiliate_code'];
    }

    /**
     * Sets affiliate_code
     *
     * @param string|null $affiliate_code affiliate_code
     *
     * @return self
     */
    public function setAffiliateCode($affiliate_code)
    {
        $this->container['affiliate_code'] = $affiliate_code;

        return $this;
    }

    /**
     * Gets campaign_code
     *
     * @return string|null
     */
    public function getCampaignCode()
    {
        return $this->container['campaign_code'];
    }

    /**
     * Sets campaign_code
     *
     * @param string|null $campaign_code campaign_code
     *
     * @return self
     */
    public function setCampaignCode($campaign_code)
    {
        $this->container['campaign_code'] = $campaign_code;

        return $this;
    }

    /**
     * Gets customer_comment
     *
     * @return string|null
     */
    public function getCustomerComment()
    {
        return $this->container['customer_comment'];
    }

    /**
     * Sets customer_comment
     *
     * @param string|null $customer_comment customer_comment
     *
     * @return self
     */
    public function setCustomerComment($customer_comment)
    {
        $this->container['customer_comment'] = $customer_comment;

        return $this;
    }

    /**
     * Gets state_id
     *
     * @return string
     */
    public function getStateId()
    {
        return $this->container['state_id'];
    }

    /**
     * Sets state_id
     *
     * @param string $state_id state_id
     *
     * @return self
     */
    public function setStateId($state_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $state_id))) {
            throw new \InvalidArgumentException("invalid value for $state_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['state_id'] = $state_id;

        return $this;
    }

    /**
     * Gets rule_ids
     *
     * @return string[]|null
     */
    public function getRuleIds()
    {
        return $this->container['rule_ids'];
    }

    /**
     * Sets rule_ids
     *
     * @param string[]|null $rule_ids rule_ids
     *
     * @return self
     */
    public function setRuleIds($rule_ids)
    {
        $this->container['rule_ids'] = $rule_ids;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return object|null
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param object|null $custom_fields custom_fields
     *
     * @return self
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets created_by_id
     *
     * @return string|null
     */
    public function getCreatedById()
    {
        return $this->container['created_by_id'];
    }

    /**
     * Sets created_by_id
     *
     * @param string|null $created_by_id created_by_id
     *
     * @return self
     */
    public function setCreatedById($created_by_id)
    {

        if (!is_null($created_by_id) && (!preg_match("/^[0-9a-f]{32}$/", $created_by_id))) {
            throw new \InvalidArgumentException("invalid value for $created_by_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['created_by_id'] = $created_by_id;

        return $this;
    }

    /**
     * Gets updated_by_id
     *
     * @return string|null
     */
    public function getUpdatedById()
    {
        return $this->container['updated_by_id'];
    }

    /**
     * Sets updated_by_id
     *
     * @param string|null $updated_by_id updated_by_id
     *
     * @return self
     */
    public function setUpdatedById($updated_by_id)
    {

        if (!is_null($updated_by_id) && (!preg_match("/^[0-9a-f]{32}$/", $updated_by_id))) {
            throw new \InvalidArgumentException("invalid value for $updated_by_id when calling Order., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['updated_by_id'] = $updated_by_id;

        return $this;
    }

    /**
     * Gets item_rounding
     *
     * @return \OpenAPI\Client\Model\CurrencyItemRounding|null
     */
    public function getItemRounding()
    {
        return $this->container['item_rounding'];
    }

    /**
     * Sets item_rounding
     *
     * @param \OpenAPI\Client\Model\CurrencyItemRounding|null $item_rounding item_rounding
     *
     * @return self
     */
    public function setItemRounding($item_rounding)
    {
        $this->container['item_rounding'] = $item_rounding;

        return $this;
    }

    /**
     * Gets total_rounding
     *
     * @return \OpenAPI\Client\Model\CurrencyItemRounding|null
     */
    public function getTotalRounding()
    {
        return $this->container['total_rounding'];
    }

    /**
     * Sets total_rounding
     *
     * @param \OpenAPI\Client\Model\CurrencyItemRounding|null $total_rounding total_rounding
     *
     * @return self
     */
    public function setTotalRounding($total_rounding)
    {
        $this->container['total_rounding'] = $total_rounding;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime|null $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets state_machine_state
     *
     * @return \OpenAPI\Client\Model\StateMachineState|null
     */
    public function getStateMachineState()
    {
        return $this->container['state_machine_state'];
    }

    /**
     * Sets state_machine_state
     *
     * @param \OpenAPI\Client\Model\StateMachineState|null $state_machine_state state_machine_state
     *
     * @return self
     */
    public function setStateMachineState($state_machine_state)
    {
        $this->container['state_machine_state'] = $state_machine_state;

        return $this;
    }

    /**
     * Gets order_customer
     *
     * @return \OpenAPI\Client\Model\OrderCustomer|null
     */
    public function getOrderCustomer()
    {
        return $this->container['order_customer'];
    }

    /**
     * Sets order_customer
     *
     * @param \OpenAPI\Client\Model\OrderCustomer|null $order_customer order_customer
     *
     * @return self
     */
    public function setOrderCustomer($order_customer)
    {
        $this->container['order_customer'] = $order_customer;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \OpenAPI\Client\Model\Currency|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \OpenAPI\Client\Model\Currency|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets language
     *
     * @return \OpenAPI\Client\Model\Language|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param \OpenAPI\Client\Model\Language|null $language language
     *
     * @return self
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets sales_channel
     *
     * @return \OpenAPI\Client\Model\SalesChannel|null
     */
    public function getSalesChannel()
    {
        return $this->container['sales_channel'];
    }

    /**
     * Sets sales_channel
     *
     * @param \OpenAPI\Client\Model\SalesChannel|null $sales_channel sales_channel
     *
     * @return self
     */
    public function setSalesChannel($sales_channel)
    {
        $this->container['sales_channel'] = $sales_channel;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \OpenAPI\Client\Model\OrderAddress|null
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \OpenAPI\Client\Model\OrderAddress|null $addresses addresses
     *
     * @return self
     */
    public function setAddresses($addresses)
    {
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets billing_address
     *
     * @return \OpenAPI\Client\Model\OrderAddress|null
     */
    public function getBillingAddress()
    {
        return $this->container['billing_address'];
    }

    /**
     * Sets billing_address
     *
     * @param \OpenAPI\Client\Model\OrderAddress|null $billing_address billing_address
     *
     * @return self
     */
    public function setBillingAddress($billing_address)
    {
        $this->container['billing_address'] = $billing_address;

        return $this;
    }

    /**
     * Gets deliveries
     *
     * @return \OpenAPI\Client\Model\OrderDelivery|null
     */
    public function getDeliveries()
    {
        return $this->container['deliveries'];
    }

    /**
     * Sets deliveries
     *
     * @param \OpenAPI\Client\Model\OrderDelivery|null $deliveries deliveries
     *
     * @return self
     */
    public function setDeliveries($deliveries)
    {
        $this->container['deliveries'] = $deliveries;

        return $this;
    }

    /**
     * Gets line_items
     *
     * @return \OpenAPI\Client\Model\OrderLineItem|null
     */
    public function getLineItems()
    {
        return $this->container['line_items'];
    }

    /**
     * Sets line_items
     *
     * @param \OpenAPI\Client\Model\OrderLineItem|null $line_items line_items
     *
     * @return self
     */
    public function setLineItems($line_items)
    {
        $this->container['line_items'] = $line_items;

        return $this;
    }

    /**
     * Gets transactions
     *
     * @return \OpenAPI\Client\Model\OrderTransaction|null
     */
    public function getTransactions()
    {
        return $this->container['transactions'];
    }

    /**
     * Sets transactions
     *
     * @param \OpenAPI\Client\Model\OrderTransaction|null $transactions transactions
     *
     * @return self
     */
    public function setTransactions($transactions)
    {
        $this->container['transactions'] = $transactions;

        return $this;
    }

    /**
     * Gets documents
     *
     * @return \OpenAPI\Client\Model\Document|null
     */
    public function getDocuments()
    {
        return $this->container['documents'];
    }

    /**
     * Sets documents
     *
     * @param \OpenAPI\Client\Model\Document|null $documents documents
     *
     * @return self
     */
    public function setDocuments($documents)
    {
        $this->container['documents'] = $documents;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \OpenAPI\Client\Model\Tag|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \OpenAPI\Client\Model\Tag|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return \OpenAPI\Client\Model\User|null
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param \OpenAPI\Client\Model\User|null $created_by created_by
     *
     * @return self
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets updated_by
     *
     * @return \OpenAPI\Client\Model\User|null
     */
    public function getUpdatedBy()
    {
        return $this->container['updated_by'];
    }

    /**
     * Sets updated_by
     *
     * @param \OpenAPI\Client\Model\User|null $updated_by updated_by
     *
     * @return self
     */
    public function setUpdatedBy($updated_by)
    {
        $this->container['updated_by'] = $updated_by;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



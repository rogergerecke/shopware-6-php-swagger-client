<?php
/**
 * Promotion
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.4.8.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Promotion Class Doc Comment
 *
 * @category Class
 * @description Added since version: 6.0.0.0
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Promotion implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Promotion';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'name' => 'string',
        'active' => 'bool',
        'valid_from' => '\DateTime',
        'valid_until' => '\DateTime',
        'max_redemptions_global' => 'int',
        'max_redemptions_per_customer' => 'int',
        'priority' => 'int',
        'exclusive' => 'bool',
        'code' => 'string',
        'use_codes' => 'bool',
        'use_individual_codes' => 'bool',
        'individual_code_pattern' => 'string',
        'use_set_groups' => 'bool',
        'customer_restriction' => 'bool',
        'prevent_combination' => 'bool',
        'order_count' => 'int',
        'orders_per_customer_count' => 'object',
        'exclusion_ids' => 'string[]',
        'custom_fields' => 'object',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime',
        'translated' => 'object',
        'setgroups' => '\OpenAPI\Client\Model\PromotionSetgroup',
        'sales_channels' => '\OpenAPI\Client\Model\PromotionSalesChannel',
        'discounts' => '\OpenAPI\Client\Model\PromotionDiscount',
        'individual_codes' => '\OpenAPI\Client\Model\PromotionIndividualCode',
        'persona_rules' => '\OpenAPI\Client\Model\Rule',
        'persona_customers' => '\OpenAPI\Client\Model\Customer',
        'order_rules' => '\OpenAPI\Client\Model\Rule',
        'cart_rules' => '\OpenAPI\Client\Model\Rule'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'name' => null,
        'active' => null,
        'valid_from' => 'date-time',
        'valid_until' => 'date-time',
        'max_redemptions_global' => 'int64',
        'max_redemptions_per_customer' => 'int64',
        'priority' => 'int64',
        'exclusive' => null,
        'code' => null,
        'use_codes' => null,
        'use_individual_codes' => null,
        'individual_code_pattern' => null,
        'use_set_groups' => null,
        'customer_restriction' => null,
        'prevent_combination' => null,
        'order_count' => 'int64',
        'orders_per_customer_count' => null,
        'exclusion_ids' => null,
        'custom_fields' => null,
        'created_at' => 'date-time',
        'updated_at' => 'date-time',
        'translated' => null,
        'setgroups' => null,
        'sales_channels' => null,
        'discounts' => null,
        'individual_codes' => null,
        'persona_rules' => null,
        'persona_customers' => null,
        'order_rules' => null,
        'cart_rules' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'active' => 'active',
        'valid_from' => 'validFrom',
        'valid_until' => 'validUntil',
        'max_redemptions_global' => 'maxRedemptionsGlobal',
        'max_redemptions_per_customer' => 'maxRedemptionsPerCustomer',
        'priority' => 'priority',
        'exclusive' => 'exclusive',
        'code' => 'code',
        'use_codes' => 'useCodes',
        'use_individual_codes' => 'useIndividualCodes',
        'individual_code_pattern' => 'individualCodePattern',
        'use_set_groups' => 'useSetGroups',
        'customer_restriction' => 'customerRestriction',
        'prevent_combination' => 'preventCombination',
        'order_count' => 'orderCount',
        'orders_per_customer_count' => 'ordersPerCustomerCount',
        'exclusion_ids' => 'exclusionIds',
        'custom_fields' => 'customFields',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'translated' => 'translated',
        'setgroups' => 'setgroups',
        'sales_channels' => 'salesChannels',
        'discounts' => 'discounts',
        'individual_codes' => 'individualCodes',
        'persona_rules' => 'personaRules',
        'persona_customers' => 'personaCustomers',
        'order_rules' => 'orderRules',
        'cart_rules' => 'cartRules'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'active' => 'setActive',
        'valid_from' => 'setValidFrom',
        'valid_until' => 'setValidUntil',
        'max_redemptions_global' => 'setMaxRedemptionsGlobal',
        'max_redemptions_per_customer' => 'setMaxRedemptionsPerCustomer',
        'priority' => 'setPriority',
        'exclusive' => 'setExclusive',
        'code' => 'setCode',
        'use_codes' => 'setUseCodes',
        'use_individual_codes' => 'setUseIndividualCodes',
        'individual_code_pattern' => 'setIndividualCodePattern',
        'use_set_groups' => 'setUseSetGroups',
        'customer_restriction' => 'setCustomerRestriction',
        'prevent_combination' => 'setPreventCombination',
        'order_count' => 'setOrderCount',
        'orders_per_customer_count' => 'setOrdersPerCustomerCount',
        'exclusion_ids' => 'setExclusionIds',
        'custom_fields' => 'setCustomFields',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'translated' => 'setTranslated',
        'setgroups' => 'setSetgroups',
        'sales_channels' => 'setSalesChannels',
        'discounts' => 'setDiscounts',
        'individual_codes' => 'setIndividualCodes',
        'persona_rules' => 'setPersonaRules',
        'persona_customers' => 'setPersonaCustomers',
        'order_rules' => 'setOrderRules',
        'cart_rules' => 'setCartRules'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'active' => 'getActive',
        'valid_from' => 'getValidFrom',
        'valid_until' => 'getValidUntil',
        'max_redemptions_global' => 'getMaxRedemptionsGlobal',
        'max_redemptions_per_customer' => 'getMaxRedemptionsPerCustomer',
        'priority' => 'getPriority',
        'exclusive' => 'getExclusive',
        'code' => 'getCode',
        'use_codes' => 'getUseCodes',
        'use_individual_codes' => 'getUseIndividualCodes',
        'individual_code_pattern' => 'getIndividualCodePattern',
        'use_set_groups' => 'getUseSetGroups',
        'customer_restriction' => 'getCustomerRestriction',
        'prevent_combination' => 'getPreventCombination',
        'order_count' => 'getOrderCount',
        'orders_per_customer_count' => 'getOrdersPerCustomerCount',
        'exclusion_ids' => 'getExclusionIds',
        'custom_fields' => 'getCustomFields',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'translated' => 'getTranslated',
        'setgroups' => 'getSetgroups',
        'sales_channels' => 'getSalesChannels',
        'discounts' => 'getDiscounts',
        'individual_codes' => 'getIndividualCodes',
        'persona_rules' => 'getPersonaRules',
        'persona_customers' => 'getPersonaCustomers',
        'order_rules' => 'getOrderRules',
        'cart_rules' => 'getCartRules'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['valid_from'] = $data['valid_from'] ?? null;
        $this->container['valid_until'] = $data['valid_until'] ?? null;
        $this->container['max_redemptions_global'] = $data['max_redemptions_global'] ?? null;
        $this->container['max_redemptions_per_customer'] = $data['max_redemptions_per_customer'] ?? null;
        $this->container['priority'] = $data['priority'] ?? null;
        $this->container['exclusive'] = $data['exclusive'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['use_codes'] = $data['use_codes'] ?? null;
        $this->container['use_individual_codes'] = $data['use_individual_codes'] ?? null;
        $this->container['individual_code_pattern'] = $data['individual_code_pattern'] ?? null;
        $this->container['use_set_groups'] = $data['use_set_groups'] ?? null;
        $this->container['customer_restriction'] = $data['customer_restriction'] ?? null;
        $this->container['prevent_combination'] = $data['prevent_combination'] ?? null;
        $this->container['order_count'] = $data['order_count'] ?? null;
        $this->container['orders_per_customer_count'] = $data['orders_per_customer_count'] ?? null;
        $this->container['exclusion_ids'] = $data['exclusion_ids'] ?? null;
        $this->container['custom_fields'] = $data['custom_fields'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['translated'] = $data['translated'] ?? null;
        $this->container['setgroups'] = $data['setgroups'] ?? null;
        $this->container['sales_channels'] = $data['sales_channels'] ?? null;
        $this->container['discounts'] = $data['discounts'] ?? null;
        $this->container['individual_codes'] = $data['individual_codes'] ?? null;
        $this->container['persona_rules'] = $data['persona_rules'] ?? null;
        $this->container['persona_customers'] = $data['persona_customers'] ?? null;
        $this->container['order_rules'] = $data['order_rules'] ?? null;
        $this->container['cart_rules'] = $data['cart_rules'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['id'])) {
            $invalidProperties[] = "invalid value for 'id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['active'] === null) {
            $invalidProperties[] = "'active' can't be null";
        }
        if ($this->container['priority'] === null) {
            $invalidProperties[] = "'priority' can't be null";
        }
        if ($this->container['exclusive'] === null) {
            $invalidProperties[] = "'exclusive' can't be null";
        }
        if ($this->container['use_codes'] === null) {
            $invalidProperties[] = "'use_codes' can't be null";
        }
        if ($this->container['use_individual_codes'] === null) {
            $invalidProperties[] = "'use_individual_codes' can't be null";
        }
        if ($this->container['use_set_groups'] === null) {
            $invalidProperties[] = "'use_set_groups' can't be null";
        }
        if ($this->container['prevent_combination'] === null) {
            $invalidProperties[] = "'prevent_combination' can't be null";
        }
        if ($this->container['created_at'] === null) {
            $invalidProperties[] = "'created_at' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {

        if (!is_null($id) && (!preg_match("/^[0-9a-f]{32}$/", $id))) {
            throw new \InvalidArgumentException("invalid value for $id when calling Promotion., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets valid_from
     *
     * @return \DateTime|null
     */
    public function getValidFrom()
    {
        return $this->container['valid_from'];
    }

    /**
     * Sets valid_from
     *
     * @param \DateTime|null $valid_from valid_from
     *
     * @return self
     */
    public function setValidFrom($valid_from)
    {
        $this->container['valid_from'] = $valid_from;

        return $this;
    }

    /**
     * Gets valid_until
     *
     * @return \DateTime|null
     */
    public function getValidUntil()
    {
        return $this->container['valid_until'];
    }

    /**
     * Sets valid_until
     *
     * @param \DateTime|null $valid_until valid_until
     *
     * @return self
     */
    public function setValidUntil($valid_until)
    {
        $this->container['valid_until'] = $valid_until;

        return $this;
    }

    /**
     * Gets max_redemptions_global
     *
     * @return int|null
     */
    public function getMaxRedemptionsGlobal()
    {
        return $this->container['max_redemptions_global'];
    }

    /**
     * Sets max_redemptions_global
     *
     * @param int|null $max_redemptions_global max_redemptions_global
     *
     * @return self
     */
    public function setMaxRedemptionsGlobal($max_redemptions_global)
    {
        $this->container['max_redemptions_global'] = $max_redemptions_global;

        return $this;
    }

    /**
     * Gets max_redemptions_per_customer
     *
     * @return int|null
     */
    public function getMaxRedemptionsPerCustomer()
    {
        return $this->container['max_redemptions_per_customer'];
    }

    /**
     * Sets max_redemptions_per_customer
     *
     * @param int|null $max_redemptions_per_customer max_redemptions_per_customer
     *
     * @return self
     */
    public function setMaxRedemptionsPerCustomer($max_redemptions_per_customer)
    {
        $this->container['max_redemptions_per_customer'] = $max_redemptions_per_customer;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return int
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param int $priority priority
     *
     * @return self
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets exclusive
     *
     * @return bool
     */
    public function getExclusive()
    {
        return $this->container['exclusive'];
    }

    /**
     * Sets exclusive
     *
     * @param bool $exclusive exclusive
     *
     * @return self
     */
    public function setExclusive($exclusive)
    {
        $this->container['exclusive'] = $exclusive;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets use_codes
     *
     * @return bool
     */
    public function getUseCodes()
    {
        return $this->container['use_codes'];
    }

    /**
     * Sets use_codes
     *
     * @param bool $use_codes use_codes
     *
     * @return self
     */
    public function setUseCodes($use_codes)
    {
        $this->container['use_codes'] = $use_codes;

        return $this;
    }

    /**
     * Gets use_individual_codes
     *
     * @return bool
     */
    public function getUseIndividualCodes()
    {
        return $this->container['use_individual_codes'];
    }

    /**
     * Sets use_individual_codes
     *
     * @param bool $use_individual_codes use_individual_codes
     *
     * @return self
     */
    public function setUseIndividualCodes($use_individual_codes)
    {
        $this->container['use_individual_codes'] = $use_individual_codes;

        return $this;
    }

    /**
     * Gets individual_code_pattern
     *
     * @return string|null
     */
    public function getIndividualCodePattern()
    {
        return $this->container['individual_code_pattern'];
    }

    /**
     * Sets individual_code_pattern
     *
     * @param string|null $individual_code_pattern individual_code_pattern
     *
     * @return self
     */
    public function setIndividualCodePattern($individual_code_pattern)
    {
        $this->container['individual_code_pattern'] = $individual_code_pattern;

        return $this;
    }

    /**
     * Gets use_set_groups
     *
     * @return bool
     */
    public function getUseSetGroups()
    {
        return $this->container['use_set_groups'];
    }

    /**
     * Sets use_set_groups
     *
     * @param bool $use_set_groups use_set_groups
     *
     * @return self
     */
    public function setUseSetGroups($use_set_groups)
    {
        $this->container['use_set_groups'] = $use_set_groups;

        return $this;
    }

    /**
     * Gets customer_restriction
     *
     * @return bool|null
     */
    public function getCustomerRestriction()
    {
        return $this->container['customer_restriction'];
    }

    /**
     * Sets customer_restriction
     *
     * @param bool|null $customer_restriction customer_restriction
     *
     * @return self
     */
    public function setCustomerRestriction($customer_restriction)
    {
        $this->container['customer_restriction'] = $customer_restriction;

        return $this;
    }

    /**
     * Gets prevent_combination
     *
     * @return bool
     */
    public function getPreventCombination()
    {
        return $this->container['prevent_combination'];
    }

    /**
     * Sets prevent_combination
     *
     * @param bool $prevent_combination prevent_combination
     *
     * @return self
     */
    public function setPreventCombination($prevent_combination)
    {
        $this->container['prevent_combination'] = $prevent_combination;

        return $this;
    }

    /**
     * Gets order_count
     *
     * @return int|null
     */
    public function getOrderCount()
    {
        return $this->container['order_count'];
    }

    /**
     * Sets order_count
     *
     * @param int|null $order_count order_count
     *
     * @return self
     */
    public function setOrderCount($order_count)
    {
        $this->container['order_count'] = $order_count;

        return $this;
    }

    /**
     * Gets orders_per_customer_count
     *
     * @return object|null
     */
    public function getOrdersPerCustomerCount()
    {
        return $this->container['orders_per_customer_count'];
    }

    /**
     * Sets orders_per_customer_count
     *
     * @param object|null $orders_per_customer_count orders_per_customer_count
     *
     * @return self
     */
    public function setOrdersPerCustomerCount($orders_per_customer_count)
    {
        $this->container['orders_per_customer_count'] = $orders_per_customer_count;

        return $this;
    }

    /**
     * Gets exclusion_ids
     *
     * @return string[]|null
     */
    public function getExclusionIds()
    {
        return $this->container['exclusion_ids'];
    }

    /**
     * Sets exclusion_ids
     *
     * @param string[]|null $exclusion_ids exclusion_ids
     *
     * @return self
     */
    public function setExclusionIds($exclusion_ids)
    {
        $this->container['exclusion_ids'] = $exclusion_ids;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return object|null
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param object|null $custom_fields custom_fields
     *
     * @return self
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime|null $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets translated
     *
     * @return object|null
     */
    public function getTranslated()
    {
        return $this->container['translated'];
    }

    /**
     * Sets translated
     *
     * @param object|null $translated translated
     *
     * @return self
     */
    public function setTranslated($translated)
    {
        $this->container['translated'] = $translated;

        return $this;
    }

    /**
     * Gets setgroups
     *
     * @return \OpenAPI\Client\Model\PromotionSetgroup|null
     */
    public function getSetgroups()
    {
        return $this->container['setgroups'];
    }

    /**
     * Sets setgroups
     *
     * @param \OpenAPI\Client\Model\PromotionSetgroup|null $setgroups setgroups
     *
     * @return self
     */
    public function setSetgroups($setgroups)
    {
        $this->container['setgroups'] = $setgroups;

        return $this;
    }

    /**
     * Gets sales_channels
     *
     * @return \OpenAPI\Client\Model\PromotionSalesChannel|null
     */
    public function getSalesChannels()
    {
        return $this->container['sales_channels'];
    }

    /**
     * Sets sales_channels
     *
     * @param \OpenAPI\Client\Model\PromotionSalesChannel|null $sales_channels sales_channels
     *
     * @return self
     */
    public function setSalesChannels($sales_channels)
    {
        $this->container['sales_channels'] = $sales_channels;

        return $this;
    }

    /**
     * Gets discounts
     *
     * @return \OpenAPI\Client\Model\PromotionDiscount|null
     */
    public function getDiscounts()
    {
        return $this->container['discounts'];
    }

    /**
     * Sets discounts
     *
     * @param \OpenAPI\Client\Model\PromotionDiscount|null $discounts discounts
     *
     * @return self
     */
    public function setDiscounts($discounts)
    {
        $this->container['discounts'] = $discounts;

        return $this;
    }

    /**
     * Gets individual_codes
     *
     * @return \OpenAPI\Client\Model\PromotionIndividualCode|null
     */
    public function getIndividualCodes()
    {
        return $this->container['individual_codes'];
    }

    /**
     * Sets individual_codes
     *
     * @param \OpenAPI\Client\Model\PromotionIndividualCode|null $individual_codes individual_codes
     *
     * @return self
     */
    public function setIndividualCodes($individual_codes)
    {
        $this->container['individual_codes'] = $individual_codes;

        return $this;
    }

    /**
     * Gets persona_rules
     *
     * @return \OpenAPI\Client\Model\Rule|null
     */
    public function getPersonaRules()
    {
        return $this->container['persona_rules'];
    }

    /**
     * Sets persona_rules
     *
     * @param \OpenAPI\Client\Model\Rule|null $persona_rules persona_rules
     *
     * @return self
     */
    public function setPersonaRules($persona_rules)
    {
        $this->container['persona_rules'] = $persona_rules;

        return $this;
    }

    /**
     * Gets persona_customers
     *
     * @return \OpenAPI\Client\Model\Customer|null
     */
    public function getPersonaCustomers()
    {
        return $this->container['persona_customers'];
    }

    /**
     * Sets persona_customers
     *
     * @param \OpenAPI\Client\Model\Customer|null $persona_customers persona_customers
     *
     * @return self
     */
    public function setPersonaCustomers($persona_customers)
    {
        $this->container['persona_customers'] = $persona_customers;

        return $this;
    }

    /**
     * Gets order_rules
     *
     * @return \OpenAPI\Client\Model\Rule|null
     */
    public function getOrderRules()
    {
        return $this->container['order_rules'];
    }

    /**
     * Sets order_rules
     *
     * @param \OpenAPI\Client\Model\Rule|null $order_rules order_rules
     *
     * @return self
     */
    public function setOrderRules($order_rules)
    {
        $this->container['order_rules'] = $order_rules;

        return $this;
    }

    /**
     * Gets cart_rules
     *
     * @return \OpenAPI\Client\Model\Rule|null
     */
    public function getCartRules()
    {
        return $this->container['cart_rules'];
    }

    /**
     * Sets cart_rules
     *
     * @param \OpenAPI\Client\Model\Rule|null $cart_rules cart_rules
     *
     * @return self
     */
    public function setCartRules($cart_rules)
    {
        $this->container['cart_rules'] = $cart_rules;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


